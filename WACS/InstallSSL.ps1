<#
.SYNOPSIS
Imports a cert from WASC renewal into FileMaker server.

.DESCRIPTION
Note that this script is intended to be run via the install script plugin from WASC via the batch script wrapper. As such, we use positional parameters to avoid issues with using a dash in the cmd line.

THIS SCRIPT IS INCOMPLETE AND *mostly* UNTESTED (some modifications have come in from people using it successfully)
Documentation referenced from https://technet.microsoft.com/en-us/library/aa997231(v=exchg.160).aspx

Proper information should be available here
https://github.com/PKISharp/win-acme/wiki/Install-Script
or more generally, here 
https://github.com/PKISharp/win-acme/wiki/Example-Scripts

.PARAMETER CertCommonName
CertCommonName name to use when importing the .pem files.

.PARAMETER CertificatePath
Path to the WACS certificate directory. The certificate that is imported will be "$(CertCommonName)-chain.pem" from this directory. 

.PARAMETER DebugOn
Include this switch parameter to write debug outputs for troubleshooting

#>

param(
	[Parameter(Position=0,Mandatory=$true)]
	[string]
	$CertCommonName,
    
    [Parameter(Position=1,Mandatory=$false)]
	[string]
	$CertificatePath,

	[switch]$DebugOn
)

if($DebugOn){
	$DebugPreference = "Continue"
}

<#
C:\ProgramData\win-acme is default location for Windows encrypted filemaker credentials file generated by SaveCredentials.ps1. Change the following if necessary.
#>

# Defauls to win-acme folder if no certificate path is provided
$WACSCertPath = "C:\ProgramData\win-acme\"
$CertificatePath = if (!$CertificatePath) {$WACSCertPath}
Write-Host "Certificate Path: $CertificatePath"

# FileMaker Admin Username and Password
$CredsFilename = "WacsFMSCreds.xml"
$CredsPath = Join-Path -Path $WACSCertPath -ChildPath $CredsFilename
$CertificateFileName = "$CertCommonName-chain.pem"
$KeyfileName = "$CertCommonName-key.pem"

$ImportCertFilePath = Join-Path -Path $CertificatePath -ChildPath $CertificateFileName
$ImportKeyFilePath = Join-Path -Path $CertificatePath -ChildPath $Keyfilename

#load input credentials
$IC = Import-CliXml $CredsPath
$Username = $IC.Username
$Password = $IC.GetNetworkCredential().Password
Write-Host "Plaintext Password:" $PlainTextPassword

# Print debugging info to make sure the parameters arrived
if ($DebugOn) {
	Write-Host "FileMaker Server Host Name: $CertCommonName"
	Write-Host "Certificate Path: $ImportCertFilePath"
	Write-Host "Keyfile Path: "$ImportKeyFilePath
	Write-Host "username: "$Username
	Write-Host "password: "$Password
}

$ImportCertCmd = "fmsadmin -y -u `"$Username`" -p `"$Password`" CERTIFICATE IMPORT `"$ImportCertFilePath`" --keyfile `"$ImportKeyFilePath`""
$RestartServerCmd = "fmsadmin -y -u `"$Username`" -p `"$Password`" restart server"

if ($DebugOn)
    {
    Write-Host $ImportCertCmd
    Write-Host $RestartServerCmd
	}
else {
	Invoke-Expression $ImportCertCmd
	Invoke-Expression $RestartServerCmd
	}

